#nullable enable
#region Created by HanyCo Infrastructure Code Generator with â™¥
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HanyCo.Infra.Designers.UI.Queries
{
    using HanyCo.Infra.Cqrs.Query;
    using HanyCo.Infra.Dto;
    using System.Collections.Generic;
    using HanyCo.Infra.Domain.Data.Contexts;
    using HanyCo.Infra.Mapping;
    
    
    /// <summary>
    /// The parameter of GetModulesQuery
    /// </summary>
    public sealed partial class GetModulesQueryParameter : IQueryParameter<GetModulesQueryResult>
    {
        
        /// <summary>
        /// Initializes a new instance of the <see cref="GetModulesQueryParameter"/> class.
        /// </summary>
        public GetModulesQueryParameter()
        {
        }
    }
    
    /// <summary>
    /// The result of GetModulesQuery
    /// </summary>
    public sealed partial class GetModulesQueryResult : IQueryResult<IEnumerable<ModuleDto>>
    {
        
        public IEnumerable<ModuleDto> Result { get; }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="GetModulesQueryResult"/> class.
        /// </summary>
        public GetModulesQueryResult(IEnumerable<ModuleDto> result)
        {
            this.Result = result;
        }
    }
    
    /// <summary>
    /// The handler of GetModulesQuery
    /// </summary>
    public sealed partial class GetModulesQueryHandler : IQueryHandler<GetModulesQueryParameter,  GetModulesQueryResult>
    {
        
        public InfraWriteDbContext WriteDbContext { get; }
        
        public IMapper Mapper { get; }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="GetModulesQueryHandler"/> class.
        /// </summary>
        public GetModulesQueryHandler(InfraWriteDbContext writeDbContext, IMapper mapper)
        {
            this.WriteDbContext = writeDbContext;
            this.Mapper = mapper;
        }
    }
}
namespace HanyCo.Infra.Dto
{
    using System;
    
    
    /// <summary>
    /// The data transfer object of Module
    /// </summary>
    public sealed partial class ModuleDto
    {
        
        [Mapping("Guid")]
        public Guid Id { get; set; }
        
        public String Name { get; set; }
    }
}
#endregion
