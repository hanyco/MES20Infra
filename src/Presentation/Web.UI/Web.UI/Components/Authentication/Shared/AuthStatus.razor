@using Blazored.LocalStorage;
@using Web.UI.Services;

@inject ApiClientService _api;
@inject NavigationManager _navigation;

@if (isAuthenticated)
{
    <span>Hello, @userName!</span>
    <button class="btn btn-link" @onclick="Logout">Log out</button>
}
else
{
    <a href="login">Login</a>
    <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|</span>
    <a href="register">Register</a>
}

@code {
    private bool isAuthenticated;
    private string? userName;
    private string? lastToken;

    private void Logout()
    {
        _api.LogoutAsync();
        
        _navigation.NavigateTo("login");
    }
            
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var token = await _api.GetTokenAsync();
        if (firstRender || token != lastToken)
        {
            lastToken = token;

            if (!string.IsNullOrEmpty(token) && !_api.IsTokenExpired(token))
            {
                isAuthenticated = true;
                userName = _api.GetUserNameFromToken(token);
            }
            else
            {
                isAuthenticated = false;
                await _api.LogoutAsync();
                _navigation.NavigateTo("login");
            }

            StateHasChanged();
        }
    }
}
