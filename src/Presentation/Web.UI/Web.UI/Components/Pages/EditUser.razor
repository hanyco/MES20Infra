@page "/edit-user/{userId}"
@using Application.DTOs.Identity
@using Blazored.LocalStorage
@using Web.UI.Helpers
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage;

<h3>Edit User</h3>

<EditForm Model="@user" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>User Name</label>
        <InputText @bind-Value="user.UserName" class="form-control" />
    </div>
    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="user.Email" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <button class="btn btn-secondary" @onclick="BackToList">Cancel</button>
</EditForm>

@code {
    [Parameter] public string userId { get; set; }
    private UpdateRequest user = new UpdateRequest();

    protected override async Task OnInitializedAsync()
    {
        user = await Http.SendApiRequestAsync<UpdateRequest>(LocalStorage, Navigation, $"Identity/users/{userId}");
    }

    private async Task HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync("Identity/update", user);
        if (response.IsSuccessStatusCode)
        {
            Navigation.NavigateTo("/users");
        }
        else
        {
            // Handle error
        }
    }

    private void BackToList()
    {
        Navigation.NavigateTo("/users");
    }
}
