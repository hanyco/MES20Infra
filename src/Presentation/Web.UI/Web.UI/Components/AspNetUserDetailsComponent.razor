@namespace Mes.System.Security

@using Blazored.LocalStorage
@using HanyCo.Infra.Blazor
@using Microsoft.Extensions.Caching.Memory
@using Microsoft.AspNetCore.Components
@using Mes.System.Security
@using Web.UI.Components.Shared

@inject IMemoryCache _memoryCache
@inject NavigationManager _navigationManager
@inject HttpClient _http
@inject ILocalStorageService _localStorage

@inherits HanyCo.Infra.Blazor.ComponentBase<AspNetUserDto, AspNetUserViewModel>


<MessageComponent @ref="MessageComponent" />
<EditForm OnValidSubmit='SaveData' Model='@this.DataContext'>
    <DataAnnotationsValidator />
    <ValidationSummary />
<div class='row'>
</div>
<div class='row'>
    <label id='IdLabel' name='IdLabel' class='col-2' disabled='disabled'>Id</label>
    <InputText id='IdTextBox' name='IdTextBox' class='col-5' type='text' disabled='disabled' @bind-Value='this.DataContext.Id'/>
    <ValidationMessage For="@(() => this.DataContext.Id)" Class="error-message" />
</div>
<div class='row'>
    <label id='UserNameLabel' name='UserNameLabel' class='col-2'>User Name</label>
    <InputText id='UserNameTextBox' name='UserNameTextBox' class='col-5' type='text' @bind-Value='this.DataContext.UserName'/>
    <ValidationMessage For="@(() => this.DataContext.UserName)" Class="error-message" />
</div>
<div class='row'>
    <label id='NormalizedUserNameLabel' name='NormalizedUserNameLabel' class='col-2'>Normalized User Name</label>
    <InputText id='NormalizedUserNameTextBox' name='NormalizedUserNameTextBox' class='col-5' type='text' @bind-Value='this.DataContext.NormalizedUserName'/>
    <ValidationMessage For="@(() => this.DataContext.NormalizedUserName)" Class="error-message" />
</div>
<div class='row'>
    <label id='EmailLabel' name='EmailLabel' class='col-2'>Email</label>
    <InputText id='EmailTextBox' name='EmailTextBox' class='col-5' type='text' @bind-Value='this.DataContext.Email'/>
    <ValidationMessage For="@(() => this.DataContext.Email)" Class="error-message" />
</div>
<div class='row'>
    <label id='NormalizedEmailLabel' name='NormalizedEmailLabel' class='col-2'>Normalized Email</label>
    <InputText id='NormalizedEmailTextBox' name='NormalizedEmailTextBox' class='col-5' type='text' @bind-Value='this.DataContext.NormalizedEmail'/>
    <ValidationMessage For="@(() => this.DataContext.NormalizedEmail)" Class="error-message" />
</div>
<div class='row'>
    <label id='EmailConfirmedLabel' name='EmailConfirmedLabel' class='col-2'>Email Confirmed</label>
    <InputCheckbox id='EmailConfirmedCheckBox' name='EmailConfirmedCheckBox' class='col-5' @bind-Value='this.DataContext.EmailConfirmed'/>
    <ValidationMessage For="@(() => this.DataContext.EmailConfirmed)" Class="error-message" />
</div>
<div class='row'>
    <label id='PasswordHashLabel' name='PasswordHashLabel' class='col-2'>Password Hash</label>
    <InputText id='PasswordHashTextBox' name='PasswordHashTextBox' class='col-5' type='text' @bind-Value='this.DataContext.PasswordHash'/>
    <ValidationMessage For="@(() => this.DataContext.PasswordHash)" Class="error-message" />
</div>
<div class='row'>
    <label id='SecurityStampLabel' name='SecurityStampLabel' class='col-2'>Security Stamp</label>
    <InputText id='SecurityStampTextBox' name='SecurityStampTextBox' class='col-5' type='text' @bind-Value='this.DataContext.SecurityStamp'/>
    <ValidationMessage For="@(() => this.DataContext.SecurityStamp)" Class="error-message" />
</div>
<div class='row'>
    <label id='ConcurrencyStampLabel' name='ConcurrencyStampLabel' class='col-2'>Concurrency Stamp</label>
    <InputText id='ConcurrencyStampTextBox' name='ConcurrencyStampTextBox' class='col-5' type='text' @bind-Value='this.DataContext.ConcurrencyStamp'/>
    <ValidationMessage For="@(() => this.DataContext.ConcurrencyStamp)" Class="error-message" />
</div>
<div class='row'>
    <label id='PhoneNumberLabel' name='PhoneNumberLabel' class='col-2'>Phone Number</label>
    <InputText id='PhoneNumberTextBox' name='PhoneNumberTextBox' class='col-5' type='text' @bind-Value='this.DataContext.PhoneNumber'/>
    <ValidationMessage For="@(() => this.DataContext.PhoneNumber)" Class="error-message" />
</div>
<div class='row'>
    <label id='PhoneNumberConfirmedLabel' name='PhoneNumberConfirmedLabel' class='col-2'>Phone Number Confirmed</label>
    <InputCheckbox id='PhoneNumberConfirmedCheckBox' name='PhoneNumberConfirmedCheckBox' class='col-5' @bind-Value='this.DataContext.PhoneNumberConfirmed'/>
    <ValidationMessage For="@(() => this.DataContext.PhoneNumberConfirmed)" Class="error-message" />
</div>
<div class='row'>
    <label id='TwoFactorEnabledLabel' name='TwoFactorEnabledLabel' class='col-2'>Two Factor Enabled</label>
    <InputCheckbox id='TwoFactorEnabledCheckBox' name='TwoFactorEnabledCheckBox' class='col-5' @bind-Value='this.DataContext.TwoFactorEnabled'/>
    <ValidationMessage For="@(() => this.DataContext.TwoFactorEnabled)" Class="error-message" />
</div>
<div class='row'>
    <label id='LockoutEndLabel' name='LockoutEndLabel' class='col-2'>Lockout End</label>
    <InputDate id='LockoutEndDatePicker' name='LockoutEndDatePicker' class='col-5' Type='InputDateType.DateTimeLocal' @bind-Value='this.DataContext.LockoutEnd'/>
    <ValidationMessage For="@(() => this.DataContext.LockoutEnd)" Class="error-message" />
</div>
<div class='row'>
    <label id='LockoutEnabledLabel' name='LockoutEnabledLabel' class='col-2'>Lockout Enabled</label>
    <InputCheckbox id='LockoutEnabledCheckBox' name='LockoutEnabledCheckBox' class='col-5' @bind-Value='this.DataContext.LockoutEnabled'/>
    <ValidationMessage For="@(() => this.DataContext.LockoutEnabled)" Class="error-message" />
</div>
<div class='row'>
    <label id='AccessFailedCountLabel' name='AccessFailedCountLabel' class='col-2'>Access Failed Count</label>
    <InputNumber id='AccessFailedCountNumericTextBox' name='AccessFailedCountNumericTextBox' class='col-5' @bind-Value='this.DataContext.AccessFailedCount'/>
    <ValidationMessage For="@(() => this.DataContext.AccessFailedCount)" Class="error-message" />
</div>
<div class='row'>
    <label id='DisplayNameLabel' name='DisplayNameLabel' class='col-2'>Display Name</label>
    <InputText id='DisplayNameTextBox' name='DisplayNameTextBox' class='col-5' type='text' @bind-Value='this.DataContext.DisplayName'/>
    <ValidationMessage For="@(() => this.DataContext.DisplayName)" Class="error-message" />
</div>
<div class='row'>
    <Button id='SaveButton' name='SaveButton' class='col-2 offset-2 btn btn-success' type='submit'>Save</Button>
    <Button id='BackButton' name='BackButton' class='col-2 offset-2 btn btn-success' type='button' @onclick='BackButton_OnClick'>Back</Button>
</div>
</EditForm>
